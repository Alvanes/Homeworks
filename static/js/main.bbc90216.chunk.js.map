{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/Components/SuperInp.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/Components/SuperBut.module.css","p2-homeworks/h5/pages/Error.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/Components/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/Components/SuperInput.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","src","avatar","id","name","message","time","AlternativeMessage","messageData","HW1","SuperButton","s","button","onClick","onClickCallback","disabled","text","Affair","affair","priority","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","changeFilterHandler","filter","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","f","filterAffairs","deleteAffair","SuperInput","value","onChange","trim","errorInput","input","Greeting","setNameCallback","addUser","error","totalUsers","GreetingContainer","users","addUserCallback","setName","setError","setTotalUsers","e","currentTarget","alert","HW3","setUsers","allUsers","u","style","display","justifyContent","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","key","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","checkmark","HW4","setText","showAlert","setChecked","column","testSpanError","blue","PreJunior","Error404","center","width","alt","data-reactid","PATH","Routess","path","element","to","replace","Header","HW5","block","header","select","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bbc90216.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Header_block__3ooUg\",\"select\":\"Header_select__fF1zV\",\"header\":\"Header_header__WybWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__31bb-\",\"errorInput\":\"SuperInputText_errorInput__1H2sO\",\"error\":\"SuperInputText_error__2-CQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3-VLq\",\"column\":\"HW4_column__qAAa6\",\"testSpanError\":\"HW4_testSpanError__ewQHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInp_input__1CINw\",\"errorInput\":\"SuperInp_errorInput__2Q1Cq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3zXQh\",\"red\":\"SuperButton_red__2gCnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2M6Dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ztN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperBut_button__34vhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Error_center__3Z2sa\"};","import React from 'react'\r\nimport './Message.css'\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n\r\n        <div className=\"container\">\r\n\r\n            <div className=\"avatar\"><img src={props.avatar}/></div>\r\n            <div className=\"triangle\">\r\n                <div id=\"triangle\"></div>\r\n            </div>\r\n            <div className=\"message\">\r\n                <div className=\"name\"> {props.name}\r\n                </div>\r\n                <div className=\"text\"> {props.message}\r\n                </div>\r\n                <div className=\"time\"> {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\n\r\n\r\nfunction AlternativeMessage() {\r\n    return (\r\n        <div></div>\r\n    );\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\nexport const messageData = {\r\n    avatar: 'https://sun9-11.userapi.com/impg/fAetzfRr02QMN1n0dZrj5lkVxgnAOund2wnkDQ/gQ3LcwKIpL4.jpg?size=604x604&quality=96&sign=72273db81bc21eba46e6e3a4b5009759&type=album',\r\n    name: 'Yan Shumsky',\r\n    message: 'This is some message',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n            <div>\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            /></div>\r\n            <hr/>\r\n            <AlternativeMessage/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react';\r\nimport s from \"./SuperBut.module.css\"\r\n\r\ntype SuperButtonPropsType = {\r\n    text?:string,\r\n    onClickCallback?: ()=>void\r\n    className?: string\r\n    disabled?: boolean\r\n}\r\n\r\nexport const SuperButton = (props:SuperButtonPropsType) => {\r\n        return (\r\n            <button\r\n                className={props.className ? props.className : s.button }\r\n                onClick={props.onClickCallback}\r\n                disabled={props.disabled}>\r\n                {props.text}\r\n            </button>\r\n        );\r\n    }\r\n\r\nexport default SuperButton;","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport SuperButton from \"../Components/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div className={\"aff2\"}>\r\n            <div className={\"sms\"}>{props.affair.name} </div>\r\n        <div className={`prior ${props.affair.priority}`}>{props.affair.priority} </div>\r\n            <div className={\"xbut\"}>\r\n                <SuperButton onClickCallback={deleteCallback} text={\"X\"} className={\"btn-class\"}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport './Affair.css';\r\nimport SuperButton from \"../Components/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const changeFilterHandler = (filter: FilterType) => {\r\n        props.setFilter(filter)\r\n    }\r\n\r\n    return (\r\n        <div className={\"pad\"}>\r\n            <div className={\"aff\"}>\r\n\r\n                {mappedAffairs}\r\n                <div className={\"but\"}>\r\n                    <SuperButton\r\n                        className={\"button-1\"}\r\n                        onClickCallback={() => changeFilterHandler(\"All\")}\r\n                        text={\"All\"}/>\r\n                    <> </>\r\n                    <SuperButton\r\n                        className={\"button-1\"}\r\n                        onClickCallback={() => changeFilterHandler(\"High\")}\r\n                        text={\"High\"}/>\r\n                    <> </>\r\n                    <SuperButton\r\n                        className={\"button-1\"}\r\n                        onClickCallback={() => changeFilterHandler(\"Middle\")}\r\n                        text={\"Middle\"}/>\r\n                    <> </>\r\n                    <SuperButton\r\n                        className={\"button-1\"}\r\n                        onClickCallback={() => changeFilterHandler(\"Low\")}\r\n                        text={\"Low\"}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = \"All\" | \"High\" | \"Middle\" | \"Low\" // need to fix any\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: string\r\n} // need to fix any\r\nexport type FilterType = AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'All') return affairs\r\n    else if (filter === 'High') return affairs.filter(f => f.priority === 'high')\r\n    else if (filter === 'Low') return affairs.filter(f => f.priority === 'low')\r\n    else if (filter === 'Middle') return affairs.filter(f => f.priority === 'middle')\r\n    return defaultAffairs\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('All')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from \"./SuperInp.module.css\"\r\n\r\ntype SyperInputType = {\r\n    value: string\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n    classname?: string\r\n}\r\n\r\nconst SuperInput = (props: SyperInputType) => {\r\n    return (\r\n        <input value={props.value}\r\n               onChange={props.onChange}\r\n               className={props.value.trim() === \"\" ? s.errorInput : s.input}/>\r\n    );\r\n}\r\n\r\nexport default SuperInput;","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\nimport SuperButton from \"../Components/SuperButton\";\r\nimport SuperInput from \"../Components/SuperInput\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    // const inputClass = s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <SuperInput value={name} onChange={setNameCallback}/>\r\n            <SuperButton text={\"add\"} onClickCallback={addUser} />\r\n            <span className={\"total\"}> {totalUsers}</span>\r\n            <div className={\"error\"}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n    let [totalUsers, setTotalUsers] = useState<number>(0)\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n        if (name != \"\") {\r\n            setError(\"\")\r\n        }\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name.trim() === \"\") {\r\n            setError(\"Введите корректное значение\")\r\n            setName(\"\")\r\n        } else {\r\n            addUserCallback(name)\r\n            alert(`Hello  ${name}!`)\r\n            setName(\"\")\r\n            setTotalUsers(totalUsers + 1)\r\n            setError(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport './Greeting.css';\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([...users, {_id: v1(), name: name}]) // need to fix\r\n    }\r\n    const allUsers = users.map(u => (\r\n        <div className={\"someClass\"} style={{display: \"flex\", justifyContent: \"flex-start\"}}>\r\n            <div className={\"total\"}>id: {u._id} </div>\r\n            <div className={\"someClass total\"}>name: {u.name}</div>\r\n        </div>))\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <div className={'someClass'}>\r\n                <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            </div>\r\n            {allUsers}\r\n\r\n\r\n            <hr/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value.trim())\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${className ? className : s.superInput} ${error ? s.errorInput : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\r\n    }\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.checkmark}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport s from \"./Error.module.css\"\r\nimport 'animate.css';\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.center}>\r\n            <h1 className={\"animate__animated animate__bounce animate__infinite\"}>УПС, КАЖЕТСЯ ЧТО-ТО ПОШЛО НЕ ТАК</h1>\r\n            <h3 className={\"animate__animated animate__bounce animate__infinite\"}>ПОПРОБУЙ ТКНУТЬ НА ПАРУ КНОПОЧЕК ВЫШЕ :)</h3>\r\n            <img width={\"700px\"} src=\"https://cdn.lyft.com/static/redirects/assets/car_tree.1.gif\"\r\n                 alt=\"Lost car driving in circles around a tree\" data-reactid=\"53\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport {Route, Routes, Navigate} from \"react-router-dom\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport Junior from \"./pages/Junior\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n}\r\n\r\nfunction Routess() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path='/' element={<Navigate to={PATH.PRE_JUNIOR} replace/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Error404/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<Error404/>}/>\r\n\r\n                <Route path={\"*\"} element={<Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routess\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from \"./Routes\";\r\nimport \"./Header.module.css\"\r\nimport 'animate.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <nav className={\"animate__animated animate__fadeInLeft\"}>\r\n         <NavLink to={PATH.PRE_JUNIOR} >Pre-Junior</NavLink>\r\n         <NavLink to={PATH.JUNIOR} >Junior</NavLink>\r\n         <NavLink to={PATH.JUNIOR_PLUS} >Junior-Plus</NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routess from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\"\r\n\r\nfunction HW5() {\r\n    return (\r\n            <HashRouter>\r\n                <div className={s.block}>\r\n                    <div className={s.header}>\r\n                        <Header/>\r\n                    </div>\r\n                    <div className={s.select}>SELECT LEVEL </div>\r\n                </div>\r\n                <Routess/>\r\n            </HashRouter>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n        <App/>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}